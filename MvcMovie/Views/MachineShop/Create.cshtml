@model MvcMovie.Models.MachineShopTable

@{
    ViewBag.Title = "Create";
}

<h2>Create new record for :</h2>

<h3>@Session["Department"]</h3>
<h4>Work Center: @Session["WorkCenter"]</h4>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>MachineShopTable</h4>*@
        <hr />
        @Html.ValidationSummary(true)

        @*//////////*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date)
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>*@

        @*//////////*@
        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date)
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemNo)
                @*@Html.ValidationMessageFor(model => model.ItemNo)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Operation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Operation)
                @*@Html.ValidationMessageFor(model => model.Operation)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Operator, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Operator)
                @*@Html.ValidationMessageFor(model => model.Operator)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Qty, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Qty)
                @*@Html.ValidationMessageFor(model => model.Qty)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hours, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hours)
                @*@Html.ValidationMessageFor(model => model.Hours)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActualRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="jsActualRate">
                @Html.EditorFor(model => model.ActualRate)
                @*@Html.ValidationMessageFor(model => model.ActualRate)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StandardRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="jsStandardRate">
                @Html.EditorFor(model => model.StandardRate)
                @*@Html.ValidationMessageFor(model => model.StandardRate)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Percent, new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="jsPercent">
                @Html.EditorFor(model => model.Percent)
                @*@Html.ValidationMessageFor(model => model.Percent)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Setup, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Setup)
                @*@Html.ValidationMessageFor(model => model.Setup)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cleaning, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cleaning)
                @*@Html.ValidationMessageFor(model => model.Cleaning)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Down, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Down)
                @*@Html.ValidationMessageFor(model => model.Down)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Other, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Other)
                @*@Html.ValidationMessageFor(model => model.Other)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NonconfParts, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NonconfParts)
                @*@Html.ValidationMessageFor(model => model.NonconfParts)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments)
                @*@Html.ValidationMessageFor(model => model.Comments)*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

<script>
    $(document).ready(function () {
        $("#jsActualRate").change(function () {

            //var extender = $find("<%= htmlEditorExtender.ClientID %>");
            //alert($("#ActualRate").val());

            if (($("#ActualRate").val() != null) && ($("#StandardRate").val() != null)) {

                //var jsActualRate = $("#jsActualRate").val();
                //alert($("#ActualRate").val());

                //var jsStandardRate = $("#jsStandardRate").val();
                //alert($("#StandardRate").val());

                //if ((jsActualRate != null) && (jsStandardRate != null)) {
                //$("#Percent").html(($("#ActualRate").val()) / ($("#StandardRate").val()));

                //Percent.innerHtml = (($("#ActualRate").val()) / ($("#StandardRate").val()));
                var result = (($("#ActualRate").val()) / ($("#StandardRate").val()));
                //$("input#Percent").val($(this).html());
                $("input#Percent").val(result);
                //alert($("#Percent").val());
                
            }
        });

        $("#StandardRate").change(function () {
            if (($("#ActualRate").val() != null) && ($("#StandardRate").val() != null)) {
                var result = (($("#ActualRate").val()) / ($("#StandardRate").val()))*100;
                var finalResult = result.toFixed(0)+"%";

                $("input#Percent").val(finalResult);
            }
        });

        $("#Qty").change(function () {
            if (($("#Qty").val() != null) && ($("#Hours").val() != null)) {
                var result = (($("#Qty").val()) / ($("#Hours").val()));
                var finalResult = result.toFixed(0);

                $("input#ActualRate").val(finalResult);
            }
        });
    });
</script>